import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';

type DifficultyLevel = 'easy' | 'medium' | 'extreme';

interface Dare {
  text: string;
  difficulty: DifficultyLevel;
  category: string;
}

const dares: Dare[] = [
  { text: "–ü–æ—Ü–µ–ª—É–π –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –≤ —à–µ—é –Ω–∞ 10 —Å–µ–∫—É–Ω–¥", difficulty: "easy", category: "–†–æ–º–∞–Ω—Ç–∏–∫–∞" },
  { text: "–°–¥–µ–ª–∞–π —Å—Ç—Ä–∏–ø—Ç–∏–∑ –ø–æ–¥ –º—É–∑—ã–∫—É", difficulty: "medium", category: "–¢–∞–Ω—Ü—ã" },
  { text: "–†–∞—Å—Å–∫–∞–∂–∏ —Å–≤–æ—é —Å–∞–º—É—é –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—É—é —Ñ–∞–Ω—Ç–∞–∑–∏—é", difficulty: "medium", category: "–ü—Ä–∏–∑–Ω–∞–Ω–∏—è" },
  { text: "–ú–∞—Å—Å–∞–∂ —Å –º–∞—Å–ª–æ–º –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ 5 –º–∏–Ω—É—Ç", difficulty: "easy", category: "–ú–∞—Å—Å–∞–∂" },
  { text: "–°—ã–≥—Ä–∞–π —Å—Ü–µ–Ω—É –∏–∑ —Ñ–∏–ª—å–º–∞ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö", difficulty: "extreme", category: "–†–æ–ª–µ–≤–∞—è –∏–≥—Ä–∞" },
  { text: "–¢–∞–Ω–µ—Ü –Ω–∞ –∫–æ–ª–µ–Ω—è—Ö —É –ø–∞—Ä—Ç–Ω—ë—Ä–∞ 1 –º–∏–Ω—É—Ç—É", difficulty: "medium", category: "–¢–∞–Ω—Ü—ã" },
  { text: "–ü—Ä–∏–∑–Ω–∞–π—Å—è –≤ —Å–∞–º–æ–º —Å–º–µ–ª–æ–º –∂–µ–ª–∞–Ω–∏–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å", difficulty: "easy", category: "–ü—Ä–∏–∑–Ω–∞–Ω–∏—è" },
  { text: "–ü–æ–∫–∞–∂–∏ —Å–≤–æ–π –ª—É—á—à–∏–π —Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∞–Ω–µ—Ü", difficulty: "medium", category: "–¢–∞–Ω—Ü—ã" },
  { text: "–û—Ä–≥–∞–Ω–∏–∑—É–π –º–∏–Ω–∏-—Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –≤ –±–µ–ª—å–µ", difficulty: "extreme", category: "–§–æ—Ç–æ" },
  { text: "–ü—Ä–∏–¥—É–º–∞–π –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ —ç—Ä–æ—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—Å–∫–∞–∑ –Ω–∞ —Ö–æ–¥—É", difficulty: "extreme", category: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ" },
  { text: "–°–¥–µ–ª–∞–π —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∞—Å—Å–∞–∂ –≥—É–±–∞–º–∏ –ø–∞—Ä—Ç–Ω—ë—Ä—É", difficulty: "medium", category: "–ú–∞—Å—Å–∞–∂" },
  { text: "–û—Ç—ã–≥—Ä–∞–π —Ä–æ–ª—å –¥–æ–º–∏–Ω–∞–Ω—Ç–∞/–ø–æ–¥—á–∏–Ω—ë–Ω–Ω–æ–≥–æ 5 –º–∏–Ω—É—Ç", difficulty: "extreme", category: "–†–æ–ª–µ–≤–∞—è –∏–≥—Ä–∞" },
  { text: "–®—ë–ø–æ—Ç–æ–º —Ä–∞—Å—Å–∫–∞–∂–∏ –ø–∞—Ä—Ç–Ω—ë—Ä—É —á—Ç–æ —Ö–æ—á–µ—à—å —Å–µ–π—á–∞—Å", difficulty: "easy", category: "–ü—Ä–∏–∑–Ω–∞–Ω–∏—è" },
  { text: "–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∏–ø—Ç–∏–∑ —Å –∑–∞–≤—è–∑–∞–Ω–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏", difficulty: "extreme", category: "–¢–∞–Ω—Ü—ã" },
  { text: "–ù–∞—Ä–∏—Å—É–π –Ω–∞ —Ç–µ–ª–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –ø–æ–º–∞–¥–æ–π", difficulty: "medium", category: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ" },
];

const Index = () => {
  const [currentDare, setCurrentDare] = useState<Dare | null>(null);
  const [selectedDifficulty, setSelectedDifficulty] = useState<DifficultyLevel | 'all'>('all');
  const [isAnimating, setIsAnimating] = useState(false);

  const getRandomDare = () => {
    setIsAnimating(true);
    
    setTimeout(() => {
      const filteredDares = selectedDifficulty === 'all' 
        ? dares 
        : dares.filter(dare => dare.difficulty === selectedDifficulty);
      
      const randomDare = filteredDares[Math.floor(Math.random() * filteredDares.length)];
      setCurrentDare(randomDare);
      setIsAnimating(false);
    }, 300);
  };

  const getDifficultyColor = (difficulty: DifficultyLevel) => {
    switch (difficulty) {
      case 'easy': return 'from-green-400 to-cyan-400';
      case 'medium': return 'from-purple-400 to-pink-400';
      case 'extreme': return 'from-red-500 to-orange-500';
    }
  };

  const getDifficultyLabel = (difficulty: DifficultyLevel) => {
    switch (difficulty) {
      case 'easy': return '–õ–µ–≥–∫–æ';
      case 'medium': return '–°—Ä–µ–¥–Ω–µ';
      case 'extreme': return '–≠–∫—Å—Ç—Ä–∏–º';
    }
  };

  return (
    <div className="min-h-screen bg-black relative overflow-hidden">
      <div className="absolute inset-0 bg-gradient-to-br from-purple-900/20 via-black to-cyan-900/20"></div>
      
      <div className="absolute top-0 left-0 w-full h-full pointer-events-none">
        <div className="absolute top-20 left-10 w-64 h-64 bg-purple-600/10 rounded-full blur-3xl animate-glow-pulse"></div>
        <div className="absolute bottom-20 right-10 w-80 h-80 bg-cyan-600/10 rounded-full blur-3xl animate-glow-pulse" style={{ animationDelay: '1s' }}></div>
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-pink-600/10 rounded-full blur-3xl animate-glow-pulse" style={{ animationDelay: '2s' }}></div>
      </div>

      <div className="relative z-10 container mx-auto px-4 py-8 md:py-16">
        <header className="text-center mb-12 md:mb-16">
          <h1 className="text-5xl md:text-7xl font-bold mb-4 gradient-bg bg-clip-text text-transparent neon-text">
            –§–∞–Ω—Ç—ã +18
          </h1>
          <p className="text-gray-400 text-lg md:text-xl">–†–∞–∑–æ–≥—Ä–µ–π –≤–µ—á–µ—Ä–∏–Ω–∫—É üî•</p>
        </header>

        <div className="max-w-4xl mx-auto mb-8">
          <div className="flex flex-wrap gap-3 justify-center mb-8">
            <Button
              onClick={() => setSelectedDifficulty('all')}
              className={`px-6 py-3 rounded-full transition-all ${
                selectedDifficulty === 'all'
                  ? 'gradient-bg neon-glow text-white font-semibold'
                  : 'bg-gray-800 text-gray-300 hover:bg-gray-700'
              }`}
            >
              –í—Å–µ —É—Ä–æ–≤–Ω–∏
            </Button>
            <Button
              onClick={() => setSelectedDifficulty('easy')}
              className={`px-6 py-3 rounded-full transition-all ${
                selectedDifficulty === 'easy'
                  ? 'bg-gradient-to-r from-green-400 to-cyan-400 neon-glow text-black font-semibold'
                  : 'bg-gray-800 text-gray-300 hover:bg-gray-700'
              }`}
            >
              <Icon name="Smile" className="mr-2" size={20} />
              –õ–µ–≥–∫–æ
            </Button>
            <Button
              onClick={() => setSelectedDifficulty('medium')}
              className={`px-6 py-3 rounded-full transition-all ${
                selectedDifficulty === 'medium'
                  ? 'bg-gradient-to-r from-purple-400 to-pink-400 neon-glow text-black font-semibold'
                  : 'bg-gray-800 text-gray-300 hover:bg-gray-700'
              }`}
            >
              <Icon name="Zap" className="mr-2" size={20} />
              –°—Ä–µ–¥–Ω–µ
            </Button>
            <Button
              onClick={() => setSelectedDifficulty('extreme')}
              className={`px-6 py-3 rounded-full transition-all ${
                selectedDifficulty === 'extreme'
                  ? 'bg-gradient-to-r from-red-500 to-orange-500 neon-glow text-white font-semibold'
                  : 'bg-gray-800 text-gray-300 hover:bg-gray-700'
              }`}
            >
              <Icon name="Flame" className="mr-2" size={20} />
              –≠–∫—Å—Ç—Ä–∏–º
            </Button>
          </div>

          {currentDare && (
            <Card 
              className={`gradient-border mb-8 transition-all duration-300 ${
                isAnimating ? 'opacity-0 scale-95' : 'opacity-100 scale-100 animate-slide-up'
              }`}
            >
              <div className="gradient-border-inner p-8 md:p-12">
                <div className="flex items-center justify-between mb-6">
                  <span className={`px-4 py-2 rounded-full bg-gradient-to-r ${getDifficultyColor(currentDare.difficulty)} text-black font-semibold text-sm`}>
                    {getDifficultyLabel(currentDare.difficulty)}
                  </span>
                  <span className="text-gray-400 text-sm">{currentDare.category}</span>
                </div>
                <p className="text-2xl md:text-3xl text-white font-medium leading-relaxed">
                  {currentDare.text}
                </p>
              </div>
            </Card>
          )}

          <div className="text-center">
            <Button
              onClick={getRandomDare}
              className="px-12 py-6 text-xl font-bold rounded-full gradient-bg neon-glow hover:scale-105 transition-transform duration-200"
            >
              <Icon name="Shuffle" className="mr-3" size={24} />
              {currentDare ? '–ù–æ–≤—ã–π —Ñ–∞–Ω—Ç' : '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'}
            </Button>
          </div>
        </div>

        <div className="max-w-2xl mx-auto mt-16">
          <h2 className="text-2xl font-bold text-center mb-6 gradient-bg bg-clip-text text-transparent">
            –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
          </h2>
          <div className="grid gap-4">
            <Card className="gradient-border">
              <div className="gradient-border-inner p-6">
                <div className="flex items-start gap-4">
                  <Icon name="Users" className="text-cyan-400 mt-1 flex-shrink-0" size={24} />
                  <div>
                    <h3 className="font-semibold text-lg mb-2 text-white">–î–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ 18+</h3>
                    <p className="text-gray-400">–ò–≥—Ä–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                  </div>
                </div>
              </div>
            </Card>
            
            <Card className="gradient-border">
              <div className="gradient-border-inner p-6">
                <div className="flex items-start gap-4">
                  <Icon name="Heart" className="text-pink-400 mt-1 flex-shrink-0" size={24} />
                  <div>
                    <h3 className="font-semibold text-lg mb-2 text-white">–û–±–æ—é–¥–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ</h3>
                    <p className="text-gray-400">–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π</p>
                  </div>
                </div>
              </div>
            </Card>
            
            <Card className="gradient-border">
              <div className="gradient-border-inner p-6">
                <div className="flex items-start gap-4">
                  <Icon name="ShieldCheck" className="text-purple-400 mt-1 flex-shrink-0" size={24} />
                  <div>
                    <h3 className="font-semibold text-lg mb-2 text-white">–ú–æ–∂–Ω–æ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è</h3>
                    <p className="text-gray-400">–õ—é–±–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–¥–∞–Ω–∏—è –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π</p>
                  </div>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;
